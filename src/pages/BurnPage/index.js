import React, { useEffect, useState } from 'react';
import { formatAmount } from '../../utils/NumberUtil';
import styles from '../../components/AssetIntroducers/AssetIntroducers.module.scss';

function BurnPage() {
  const [burnDMG, setBurnDMG] = useState({});
  const [burnDMGFromVote, setBurnDMGFromVote] = useState('');

  useEffect( () => {
    getDMGBurn();
  }, []);

  const getDMGBurn = () => {
    fetch('https://api.defimoneymarket.com/v1/dmg/burns')
      .then(response => response.json())
      .then(response => {
        setBurnDMG(response['data'])
        const burnDMGFromVote = response['data'].burns.reduce(function (accumulator, currentValue) {
          if(!currentValue.is_from_vote){
            return accumulator + Number(currentValue.burn_amount);
          }
        }, 0)
        setBurnDMGFromVote(burnDMGFromVote);
      });
  }

  console.log('burnDMG', burnDMG, 'burnDMGFromVote', burnDMGFromVote);
  const { total_amount_burned } = burnDMG;
  return (
    <div className="content-wrap">

      <div className="dmm-burn-header-wrap">
        <h1>Token Burns</h1>
        <h2>{formatAmount(`${total_amount_burned}`)}</h2>
        <h3>Total DMG Burned</h3>
      </div>

      <div className="dmm-burn-content-wrap">
        <div className="dmm-burn-unit-wrap">
          <div className="dmm-burn-unit">
            <h4>8,000,813</h4>
            <h5>DMG Burned from votes</h5>
            <p>The DMM DAO votes regularly votes on token burns, such as ones that use excess revenue generated by the
              DMM Ecosystem.</p>
          </div>
        </div>
        <div className="dmm-burn-unit-wrap">
          <div className="dmm-burn-unit">
            <h4>921,241</h4>
            <h5>DMG Burned from farming</h5>
            <p>Whenever a farming withdrawal is processed, a fee of 0.5% is taken from the withdrawal to purchase DMG
              and burn it.</p>
          </div>
        </div>
      </div>

    </div>
  );
}

export default BurnPage;
